name: build

# build on c/cpp changes or workflow changes
on:
  push:
    paths:
      - 'lib/**.[ch]'
      - 'lib/**.cpp'
      - 'src/**.[ch]'
      - 'src/**.cpp'
      - '**/CMakeLists.txt'
      - 'cmake/Modules/**'
      - 'util/buildbot/**'
      - 'util/ci/**'
      - '.github/workflows/**.yml'
      - 'Dockerfile'
      - '.dockerignore'
  pull_request:
    paths:
      - 'lib/**.[ch]'
      - 'lib/**.cpp'
      - 'src/**.[ch]'
      - 'src/**.cpp'
      - '**/CMakeLists.txt'
      - 'cmake/Modules/**'
      - 'util/buildbot/**'
      - 'util/ci/**'
      - '.github/workflows/**.yml'
      - 'Dockerfile'
      - '.dockerignore'

env:
  MINETEST_POSTGRESQL_CONNECT_STRING: 'host=localhost user=minetest password=minetest dbname=minetest'

jobs:
  # Current gcc version
  gcc_12:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Install deps
        run: |
          source ./util/ci/common.sh
          install_linux_deps g++-12 libluajit-5.1-dev

      - name: Build
        run: |
          ./util/ci/build.sh
        env:
          CC: gcc-12
          CXX: g++-12

      - name: Test
        run: |
          ./bin/minetest --run-unittests

  # Current clang version
  clang_14:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Install deps
        run: |
          source ./util/ci/common.sh
          install_linux_deps clang-14 gdb

      - name: Build
        run: |
          ./util/ci/build.sh
        env:
          CC: clang-14
          CXX: clang++-14

      - name: Test
        run: |
          ./bin/minetest --run-unittests

      - name: Integration test + devtest
        run: |
          ./util/test_multiplayer.sh

  win32:
    name: "MinGW cross-compiler (32-bit)"
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Install compiler
        run: |
          sudo apt-get update && sudo apt-get install -y gettext
          sudo ./util/buildbot/download_toolchain.sh i686 /usr

      - name: Build
        run: |
           EXISTING_MINETEST_DIR=$PWD ./util/buildbot/buildwin32.sh B

      - uses: actions/upload-artifact@v3
        with:
          name: mingw32
          path: B/build/*.zip
          if-no-files-found: error

  win64:
    name: "MinGW cross-compiler (64-bit)"
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Install compiler
        run: |
          sudo apt-get update && sudo apt-get install -y gettext
          sudo ./util/buildbot/download_toolchain.sh x86_64 /usr

      - name: Build
        run: |
          EXISTING_MINETEST_DIR=$PWD ./util/buildbot/buildwin64.sh B

      - uses: actions/upload-artifact@v3
        with:
          name: mingw64
          path: B/build/*.zip
          if-no-files-found: error
