name: build

# build on c/cpp changes or workflow changes
on:
  push:
    paths:
      - 'lib/**.[ch]'
      - 'lib/**.cpp'
      - 'src/**.[ch]'
      - 'src/**.cpp'
      - '**/CMakeLists.txt'
      - 'cmake/Modules/**'
      - 'util/buildbot/**'
      - 'util/ci/**'
      - '.github/workflows/**.yml'
      - 'Dockerfile'
      - '.dockerignore'
  pull_request:
    paths:
      - 'lib/**.[ch]'
      - 'lib/**.cpp'
      - 'src/**.[ch]'
      - 'src/**.cpp'
      - '**/CMakeLists.txt'
      - 'cmake/Modules/**'
      - 'util/buildbot/**'
      - 'util/ci/**'
      - '.github/workflows/**.yml'
      - 'Dockerfile'
      - '.dockerignore'

jobs:
  # Current gcc version
  gcc_10:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Install deps
        run: |
          source ./util/ci/common.sh
          install_linux_deps g++-10

      - name: Build
        run: |
          ./util/ci/build.sh
        env:
          CC: gcc-10
          CXX: g++-10

      - name: Test
        run: |
          ./bin/minetest --run-unittests

  # Current clang version
  clang_10:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Install deps
        run: |
          source ./util/ci/common.sh
          install_linux_deps clang-10 valgrind libluajit-5.1-dev

      - name: Build
        run: |
          ./util/ci/build.sh
        env:
          CC: clang-10
          CXX: clang++-10
          CMAKE_FLAGS: "-DREQUIRE_LUAJIT=1"

      - name: Test
        run: |
          ./bin/minetest --run-unittests

      - name: Valgrind
        run: |
          valgrind --leak-check=full --leak-check-heuristics=all --undef-value-errors=no --error-exitcode=9 ./bin/minetest --run-unittests

  win32:
    name: "MinGW cross-compiler (32-bit)"
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Install compiler
        run: |
          sudo apt-get update && sudo apt-get install -y gettext
          wget http://minetest.kitsunemimi.pw/mingw-w64-i686_11.2.0_ubuntu20.04.tar.xz -O mingw.tar.xz
          sudo tar -xaf mingw.tar.xz -C /usr

      - name: Build
        run: |
           EXISTING_MINETEST_DIR=$PWD ./util/buildbot/buildwin32.sh winbuild

      - name: Upload output as artifact
        uses: actions/upload-artifact@v2
        with:
          path: winbuild/build/minetest-*-win32.7z

  win64:
    name: "MinGW cross-compiler (64-bit)"
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Install compiler
        run: |
          sudo apt-get update && sudo apt-get install -y gettext
          wget http://minetest.kitsunemimi.pw/mingw-w64-x86_64_11.2.0_ubuntu20.04.tar.xz -O mingw.tar.xz
          sudo tar -xaf mingw.tar.xz -C /usr

      - name: Build
        run: |
          EXISTING_MINETEST_DIR=$PWD ./util/buildbot/buildwin64.sh winbuild

      - name: Upload output as artifact
        uses: actions/upload-artifact@v2
        with:
          path: winbuild/build/minetest-*-win64.7z
